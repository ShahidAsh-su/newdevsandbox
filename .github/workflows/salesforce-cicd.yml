name: Salesforce CI/CD

on:
  workflow_dispatch:
    inputs:
      packageName:
        description: 'Name of the package'
        required: true
        default: 'YourPackageName'
      versionNumber:
        description: 'Version number for the package (e.g., 1.1.0.1)'
        required: true
        default: '1.1.0.1'

jobs:
  authenticate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        id: step1

      - name: Install Salesforce CLI
        if: steps.step1.outcome == 'success'
        id: step2
        run: |
          sudo npm install -g @salesforce/cli

      - name: Install jq
        run: |
          sudo apt-get install jq

      # Step to authenticate with Salesforce Dev Hub
      - name: Authenticate with Dev Hub
        if: steps.step2.outcome == 'success'
        id: step3
        env:
          # SFDX_AUTH_URL is a secret stored in GitHub Secrets
          SFDX_AUTH_URL: ${{ secrets.SFDX_AUTH_URL }}
        run: |
          echo "Authenticating with Dev Hub"
          # Write the authentication URL to a file
          echo $SFDX_AUTH_URL > auth_url.txt
          # Use the Salesforce CLI to authenticate with the org
          sfdx force:auth:sfdxurl:store -f auth_url.txt -a DevHub

      - name: Create Package Version
        if: steps.step3.outcome == 'success'
        id: step4
        run: |
          PACKAGE_NAME="${{ github.event.inputs.packageName }}"
          VERSION_NUMBER="${{ github.event.inputs.versionNumber }}"
          echo "Creating package version for package: $PACKAGE_NAME with version: ${{ github.sha }}"
          CREATE_OUTPUT=$(sf package version create --package $PACKAGE_NAME --installation-key Sscdre1p --wait 10 -n $VERSION_NUMBER --target-dev-hub shahidnewdev@clear.com --json --skip-validation )|| {
            echo "Failed to create package version"
            echo "Create Output: $CREATE_OUTPUT"
            exit 1
          }
          echo "Create Output: $CREATE_OUTPUT"
          echo "$CREATE_OUTPUT" | jq -r '.result.SubscriberPackageVersionId'
          PACKAGE_VERSION_ID=$(echo $CREATE_OUTPUT | jq -r '.result.SubscriberPackageVersionId')
          echo "PACKAGE_VERSION_ID=$PACKAGE_VERSION_ID" >> $GITHUB_ENV
          echo "Create Output: $PACKAGE_VERSION_ID"
